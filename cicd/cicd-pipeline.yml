name: DataFactory-CICD-LinkedTemplates-$(Date:yyyyMMdd)$(Rev:.r)

# ADF is the shortened version of Azure Data Factory

trigger:
- main # Will trigger the pipeline after a commit to the main branch. Can update to trigger: none to only run the pipeline manually.

pool:
  vmImage: "windows-latest" 

stages:
- stage: BuildDEVDataFactory
  displayName: "Build DEV Data Factory"
  
  variables:
  - template: variables/dev-variables.yml

  jobs:
  - job: ValidateAndBuildDataFactoryTemplate
    displayName: "Build DEV Data Factory"
    steps:
    - template: adf-cicd/adf-build.yml
      parameters:
        DataFactoryName: "${{ variables.BuildDataFactoryName }}"
        ResourceGroupName: "${{ variables.BuildDataFactoryResourceGroupName }}"
        ADFArtifactName: "${{ variables.ADFArtifactName }}"
        WorkingDirectory: "${{ variables.WorkingDirectory }}"


    - task: DownloadPipelineArtifact@2
      displayName: "Download The ADF Artifact"
      inputs:
        buildType: "current"
        artifactName: "${{ variables.ADFArtifactName }}"
        targetpath: "$(Pipeline.Workspace)/${{ variables.ADFArtifactName }}"
    

    - task: AzureCLI@2
      displayName: 'Create Template Specs for ADF Linked ARM Templates'
      inputs:
        azureSubscription: "${{ variables.AzureResourceManagerConnection }}"
        scriptType: 'pscore'
        targetType: 'filePath'
        scriptLocation: 'scriptPath'
        scriptPath: '${{ variables.WorkingDirectory }}/cicd/new-linked-templates-process/new-linked-template-create-deploy.ps1' # $(System.DefaultWorkingDirectory)/cicd/... also works
        arguments: "-FolderPathADFLinkedARMTemplates '$(Pipeline.Workspace)/${{ variables.ADFArtifactName }}/linkedTemplates' 
                    -DeployTemplateSpecsResourceGroupName '${{ variables.DeployTemplateSpecsResourceGroupName }}' 
                    -DeployTemplateSpecsResourceGroupLocation '${{ variables.DeployTemplateSpecsResourceGroupLocation }}' 
                    -TemplateSpecsVersionNumber '${{ variables.TemplateSpecsVersionNumber }}'
                    -TemplateSpecMasterName '${{ variables.TemplateSpecMasterName }}'
                    -OutputFolderPathNewADFMasterARMTemplate  '${{ variables.WorkingDirectory }}'" # Don't change this path
                    # FolderPathADFLinkedARMTemplates is where the pipeline stores the Data Factory (ADF) linked ARM Templates

    
    - task: PublishPipelineArtifact@1
      displayName: "Publish New Linked ARM Template Master File"
      inputs:
        targetPath: "${{ variables.WorkingDirectory }}/${{ variables.TemplateSpecMasterName }}.json"
        artifactName: "NewLinkedARMTemplateMasterFile"
        publishLocation: "pipeline"
            
     
# DEPLOY TO UAT
- stage: DeployToUAT
  dependsOn: BuildDEVDataFactory
  condition: succeeded()
  displayName: "Deploy To UAT"

  variables:
  - template: variables/uat-variables.yml
    
  jobs:
  - deployment: ApprovalCheckDeployToUAT
    displayName: "Approval Check To Deploy To UAT"
    environment: ADF_UAT
    strategy:
      runOnce:
        deploy:
          steps:
          - powershell: |
              Write-Host "Deploy To UAT has been fully approved. Starting the deployment to UAT."

  - job: DeployDataFactory
    displayName: "Deploy ADF Using Linked Template Specs To Target ADF"
    dependsOn: ApprovalCheckDeployToUAT
    condition: succeeded()
    steps:
    - template: adf-cicd/adf-deploy.yml
      parameters:
        AzureResourceManagerConnection: "${{ variables.AzureResourceManagerConnection }}"
        DataFactoryName: "${{ variables.DataFactoryName }}"
        DataFactoryTemplateParametersFilePath: "${{ variables.DataFactoryTemplateParametersFilePath }}"
        ResourceGroupName: "${{ variables.ADFResourceGroupName }}"
        ResourceGroupLocation: "${{ variables.ResourceGroupLocation }}"
        ADFArtifactName: "${{ variables.ADFArtifactName }}"
        Environment: "${{ variables.Environment }}"
        # ADF Linked Template Variables
        TemplateSpecsResourceGroupName: "${{ variables.TemplateSpecsResourceGroupName }}"
        TemplateSpecsResourceGroupLocation: "${{ variables.TemplateSpecsResourceGroupLocation }}"
        TemplateSpecMasterName: "${{ variables.TemplateSpecMasterName }}"
        TemplateSpecMasterVersionNumber: "${{ variables.TemplateSpecMasterVersionNumber }}"


# DEPLOY TO PROD
- stage: DeployToPROD
  dependsOn: 
    - BuildDEVDataFactory
    - DeployToUAT 
  condition: succeeded()
  displayName: "Deploy To PROD"

  variables:
  - template: variables/prod-variables.yml
  
  jobs:
  - deployment: ApprovalCheckDeployToPROD
    displayName: "Approval Check To Deploy To PROD"
    environment: ADF_Prod
    strategy:
      runOnce:
        deploy:
          steps:
          - powershell: |
              Write-Host "Deploy To PROD has been fully approved. Starting the deployment to PROD."
  
  - job: DeployDataFactory
    displayName: "Deploy ADF ARM Template To Target ADF"
    dependsOn: ApprovalCheckDeployToPROD
    condition: succeeded()
    steps:
    - template: adf-cicd/adf-deploy.yml
      parameters:
        AzureResourceManagerConnection: "${{ variables.AzureResourceManagerConnection }}"
        DataFactoryName: "${{ variables.DataFactoryName }}"
        DataFactoryTemplateParametersFilePath: "${{ variables.DataFactoryTemplateParametersFilePath }}"
        ResourceGroupName: "${{ variables.ADFResourceGroupName }}"
        ResourceGroupLocation: "${{ variables.ResourceGroupLocation }}"
        ADFArtifactName: "${{ variables.ADFArtifactName }}"
        Environment: "${{ variables.Environment }}"
        # ADF Linked Template Variables
        TemplateSpecsResourceGroupName: "${{ variables.TemplateSpecsResourceGroupName }}"
        TemplateSpecsResourceGroupLocation: "${{ variables.TemplateSpecsResourceGroupLocation }}"
        TemplateSpecMasterName: "${{ variables.TemplateSpecMasterName }}"
        TemplateSpecMasterVersionNumber: "${{ variables.TemplateSpecMasterVersionNumber }}"
    
    #Uncomment this task if you want to delete all of the Template Specs in the Resource Group. 
    #Note, this will delete all Template Specs in the Resource Group
    - task: AzureCLI@2
      displayName: 'Optionally Delete All of the Template Specs'
      inputs:
        azureSubscription: "${{ variables.AzureResourceManagerConnection }}"
        scriptType: 'pscore'
        targetType: 'filePath'
        scriptLocation: 'inlineScript'
        inlineScript: |
          $TemplateSpecNames = $(az ts list --resource-group "${{ variables.TemplateSpecsResourceGroupName }}" --query "[].name" --output tsv)

          foreach($Name in $TemplateSpecNames){
              Write-Host "Attempting to delete Template Spec $Name"
              az resource delete --name "$Name" --resource-group "${{ variables.TemplateSpecsResourceGroupName }}" --resource-type "Microsoft.Resources/templateSpecs"
              Write-Host "Successfully deleted Template Spec $Name"
          }  
          Write-Host "Successfully deleted all of the Template Specs from Resource Group ${{ variables.TemplateSpecsResourceGroupName }}"
